-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

-- Global variables
local player = Players.LocalPlayer
local running = false
local amberCollected = 0
local guiVisible = true
local maxRetries = 3
local retryDelay = 0.3
local verificationDelay = 0.2
local teleportOffset = Vector3.new(0, 3, 0)
local currentAmber = nil
local lastTeleport = 0
local teleportCooldown = 0.3

-- Modern Color Scheme
local COLORS = {
    BACKGROUND = Color3.fromRGB(15, 15, 15),
    SECONDARY = Color3.fromRGB(30, 30, 30),
    ACCENT = Color3.fromRGB(0, 150, 255),
    TEXT = Color3.fromRGB(240, 240, 240),
    BUTTON_GREEN = Color3.fromRGB(0, 180, 0),
    BUTTON_RED = Color3.fromRGB(180, 0, 0),
    TOGGLE_ON = Color3.fromRGB(0, 150, 255),
    TOGGLE_OFF = Color3.fromRGB(60, 60, 60)
}

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Echelon_Farm_Pro"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Anti-detection protection
if syn and syn.protect_gui then
    syn.protect_gui(ScreenGui)
    ScreenGui.Parent = CoreGui
elseif gethui then
    ScreenGui.Parent = gethui()
else
    ScreenGui.Parent = CoreGui
end

-- Main frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = COLORS.BACKGROUND
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.5, -175, 0.5, -150)
MainFrame.Size = UDim2.new(0, 350, 0, 300)
MainFrame.Active = true
MainFrame.Draggable = true

-- Modern border effect
local UIStroke = Instance.new("UIStroke")
UIStroke.Parent = MainFrame
UIStroke.Color = COLORS.ACCENT
UIStroke.Thickness = 2
UIStroke.Transparency = 0.5

-- Title bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Parent = MainFrame
TitleBar.BackgroundColor3 = COLORS.SECONDARY
TitleBar.BorderSizePixel = 0
TitleBar.Size = UDim2.new(1, 0, 0, 35)

-- Title with gradient effect
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Parent = TitleBar
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 15, 0, 0)
Title.Size = UDim2.new(1, -30, 1, 0)
Title.Font = Enum.Font.GothamBlack
Title.Text = "ECHELON FARM PRO"
Title.TextColor3 = COLORS.ACCENT
Title.TextSize = 16.0
Title.TextXAlignment = Enum.TextXAlignment.Left

-- Close button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Parent = TitleBar
CloseButton.BackgroundTransparency = 1
CloseButton.Position = UDim2.new(1, -25, 0, 5)
CloseButton.Size = UDim2.new(0, 20, 0, 20)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "Ã—"
CloseButton.TextColor3 = COLORS.TEXT
CloseButton.TextSize = 18.0

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Content frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, 0, 0, 35)
ContentFrame.Size = UDim2.new(1, 0, 1, -35)

local UIPadding = Instance.new("UIPadding")
UIPadding.Parent = ContentFrame
UIPadding.PaddingLeft = UDim.new(0, 15)
UIPadding.PaddingRight = UDim.new(0, 15)
UIPadding.PaddingTop = UDim.new(0, 10)
UIPadding.PaddingBottom = UDim.new(0, 10)

-- Stats panel with modern design
local StatsPanel = Instance.new("Frame")
StatsPanel.Name = "StatsPanel"
StatsPanel.Parent = ContentFrame
StatsPanel.BackgroundColor3 = COLORS.SECONDARY
StatsPanel.BorderSizePixel = 0
StatsPanel.Size = UDim2.new(1, 0, 0, 80)

local StatsStroke = Instance.new("UIStroke")
StatsStroke.Parent = StatsPanel
StatsStroke.Color = COLORS.ACCENT
StatsStroke.Thickness = 1
StatsStroke.Transparency = 0.7

-- Counter with icon
local CounterFrame = Instance.new("Frame")
CounterFrame.Name = "CounterFrame"
CounterFrame.Parent = StatsPanel
CounterFrame.BackgroundTransparency = 1
CounterFrame.Position = UDim2.new(0, 10, 0, 10)
CounterFrame.Size = UDim2.new(1, -20, 0, 30)

local CounterIcon = Instance.new("ImageLabel")
CounterIcon.Name = "CounterIcon"
CounterIcon.Parent = CounterFrame
CounterIcon.BackgroundTransparency = 1
CounterIcon.Position = UDim2.new(0, 0, 0, 0)
CounterIcon.Size = UDim2.new(0, 25, 0, 25)
CounterIcon.Image = "rbxassetid://7733960981" -- Diamond icon
CounterIcon.ImageColor3 = COLORS.ACCENT

local CounterLabel = Instance.new("TextLabel")
CounterLabel.Name = "CounterLabel"
CounterLabel.Parent = CounterFrame
CounterLabel.BackgroundTransparency = 1
CounterLabel.Position = UDim2.new(0, 35, 0, 0)
CounterLabel.Size = UDim2.new(1, -35, 1, 0)
CounterLabel.Font = Enum.Font.GothamSemibold
CounterLabel.Text = "0 Collected"
CounterLabel.TextColor3 = COLORS.TEXT
CounterLabel.TextSize = 14.0
CounterLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Status with animation
local StatusFrame = Instance.new("Frame")
StatusFrame.Name = "StatusFrame"
StatusFrame.Parent = StatsPanel
StatusFrame.BackgroundTransparency = 1
StatusFrame.Position = UDim2.new(0, 10, 0, 45)
StatusFrame.Size = UDim2.new(1, -20, 0, 25)

local StatusDot = Instance.new("Frame")
StatusDot.Name = "StatusDot"
StatusDot.Parent = StatusFrame
StatusDot.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
StatusDot.BorderSizePixel = 0
StatusDot.Position = UDim2.new(0, 0, 0.5, -5)
StatusDot.Size = UDim2.new(0, 10, 0, 10)

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(1, 0)
UICorner.Parent = StatusDot

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = StatusFrame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0, 20, 0, 0)
StatusLabel.Size = UDim2.new(1, -20, 1, 0)
StatusLabel.Font = Enum.Font.GothamMedium
StatusLabel.Text = "IDLE"
StatusLabel.TextColor3 = COLORS.TEXT
StatusLabel.TextSize = 14.0
StatusLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Options panel
local OptionsPanel = Instance.new("Frame")
OptionsPanel.Name = "OptionsPanel"
OptionsPanel.Parent = ContentFrame
OptionsPanel.BackgroundColor3 = COLORS.SECONDARY
OptionsPanel.BorderSizePixel = 0
OptionsPanel.Position = UDim2.new(0, 0, 0, 90)
OptionsPanel.Size = UDim2.new(1, 0, 0, 120)

local OptionsStroke = Instance.new("UIStroke")
OptionsStroke.Parent = OptionsPanel
OptionsStroke.Color = COLORS.ACCENT
OptionsStroke.Thickness = 1
OptionsStroke.Transparency = 0.7

-- Speed option
local SpeedFrame = Instance.new("Frame")
SpeedFrame.Name = "SpeedFrame"
SpeedFrame.Parent = OptionsPanel
SpeedFrame.BackgroundTransparency = 1
SpeedFrame.Position = UDim2.new(0, 10, 0, 10)
SpeedFrame.Size = UDim2.new(1, -20, 0, 30)

local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Name = "SpeedLabel"
SpeedLabel.Parent = SpeedFrame
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Position = UDim2.new(0, 0, 0, 0)
SpeedLabel.Size = UDim2.new(0, 100, 1, 0)
SpeedLabel.Font = Enum.Font.GothamMedium
SpeedLabel.Text = "SPEED:"
SpeedLabel.TextColor3 = COLORS.TEXT
SpeedLabel.TextSize = 14.0
SpeedLabel.TextXAlignment = Enum.TextXAlignment.Left

local SpeedSlider = Instance.new("Frame")
SpeedSlider.Name = "SpeedSlider"
SpeedSlider.Parent = SpeedFrame
SpeedSlider.BackgroundColor3 = COLORS.TOGGLE_OFF
SpeedSlider.BorderSizePixel = 0
SpeedSlider.Position = UDim2.new(0, 110, 0.5, -5)
SpeedSlider.Size = UDim2.new(0, 180, 0, 10)

local SpeedSliderFill = Instance.new("Frame")
SpeedSliderFill.Name = "SpeedSliderFill"
SpeedSliderFill.Parent = SpeedSlider
SpeedSliderFill.BackgroundColor3 = COLORS.ACCENT
SpeedSliderFill.BorderSizePixel = 0
SpeedSliderFill.Size = UDim2.new(0.5, 0, 1, 0)

local SpeedSliderButton = Instance.new("TextButton")
SpeedSliderButton.Name = "SpeedSliderButton"
SpeedSliderButton.Parent = SpeedSlider
SpeedSliderButton.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
SpeedSliderButton.BorderSizePixel = 0
SpeedSliderButton.Position = UDim2.new(0.5, -5, 0.5, -7.5)
SpeedSliderButton.Size = UDim2.new(0, 15, 0, 15)
SpeedSliderButton.Text = ""

local UICorner2 = Instance.new("UICorner")
UICorner2.CornerRadius = UDim.new(1, 0)
UICorner2.Parent = SpeedSliderButton

-- Auto-Teleport toggle
local TeleportFrame = Instance.new("Frame")
TeleportFrame.Name = "TeleportFrame"
TeleportFrame.Parent = OptionsPanel
TeleportFrame.BackgroundTransparency = 1
TeleportFrame.Position = UDim2.new(0, 10, 0, 50)
TeleportFrame.Size = UDim2.new(1, -20, 0, 30)

local TeleportLabel = Instance.new("TextLabel")
TeleportLabel.Name = "TeleportLabel"
TeleportLabel.Parent = TeleportFrame
TeleportLabel.BackgroundTransparency = 1
TeleportLabel.Position = UDim2.new(0, 0, 0, 0)
TeleportLabel.Size = UDim2.new(0, 150, 1, 0)
TeleportLabel.Font = Enum.Font.GothamMedium
TeleportLabel.Text = "AUTO-TELEPORT:"
TeleportLabel.TextColor3 = COLORS.TEXT
TeleportLabel.TextSize = 14.0
TeleportLabel.TextXAlignment = Enum.TextXAlignment.Left

local TeleportToggle = Instance.new("Frame")
TeleportToggle.Name = "TeleportToggle"
TeleportToggle.Parent = TeleportFrame
TeleportToggle.BackgroundColor3 = COLORS.TOGGLE_ON
TeleportToggle.BorderSizePixel = 0
TeleportToggle.Position = UDim2.new(1, -50, 0.5, -10)
TeleportToggle.Size = UDim2.new(0, 50, 0, 20)

local TeleportToggleButton = Instance.new("Frame")
TeleportToggleButton.Name = "TeleportToggleButton"
TeleportToggleButton.Parent = TeleportToggle
TeleportToggleButton.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
TeleportToggleButton.BorderSizePixel = 0
TeleportToggleButton.Position = UDim2.new(1, -20, 0.5, -7.5)
TeleportToggleButton.Size = UDim2.new(0, 15, 0, 15)

local UICorner3 = Instance.new("UICorner")
UICorner3.CornerRadius = UDim.new(1, 0)
UICorner3.Parent = TeleportToggle

local UICorner4 = Instance.new("UICorner")
UICorner4.CornerRadius = UDim.new(1, 0)
UICorner4.Parent = TeleportToggleButton

-- Control buttons
local ButtonsPanel = Instance.new("Frame")
ButtonsPanel.Name = "ButtonsPanel"
ButtonsPanel.Parent = ContentFrame
ButtonsPanel.BackgroundColor3 = COLORS.SECONDARY
ButtonsPanel.BorderSizePixel = 0
ButtonsPanel.Position = UDim2.new(0, 0, 0, 220)
ButtonsPanel.Size = UDim2.new(1, 0, 0, 50)

local ButtonsStroke = Instance.new("UIStroke")
ButtonsStroke.Parent = ButtonsPanel
ButtonsStroke.Color = COLORS.ACCENT
ButtonsStroke.Thickness = 1
ButtonsStroke.Transparency = 0.7

local StartButton = Instance.new("TextButton")
StartButton.Name = "StartButton"
StartButton.Parent = ButtonsPanel
StartButton.BackgroundColor3 = COLORS.BUTTON_GREEN
StartButton.Position = UDim2.new(0, 10, 0, 10)
StartButton.Size = UDim2.new(0.5, -15, 0, 30)
StartButton.Font = Enum.Font.GothamBold
StartButton.Text = "START"
StartButton.TextColor3 = Color3.fromRGB(240, 240, 240)
StartButton.TextSize = 14.0
StartButton.AutoButtonColor = false
StartButton.BorderSizePixel = 0

local StopButton = Instance.new("TextButton")
StopButton.Name = "StopButton"
StopButton.Parent = ButtonsPanel
StopButton.BackgroundColor3 = COLORS.BUTTON_RED
StopButton.Position = UDim2.new(0.5, 5, 0, 10)
StopButton.Size = UDim2.new(0.5, -15, 0, 30)
StopButton.Font = Enum.Font.GothamBold
StopButton.Text = "STOP"
StopButton.TextColor3 = Color3.fromRGB(240, 240, 240)
StopButton.TextSize = 14.0
StopButton.AutoButtonColor = false
StopButton.BorderSizePixel = 0

-- Options variables
local teleportSpeed = 0.5
local autoTeleport = true

-- GUI Functions
local function updateCounter()
    CounterLabel.Text = amberCollected .. " Collected"
end

local function updateStatus(text, isRunning)
    StatusLabel.Text = text
    if isRunning then
        StatusDot.BackgroundColor3 = Color3.fromRGB(50, 255, 50)
        StatusLabel.TextColor3 = Color3.fromRGB(50, 255, 50)
    else
        StatusDot.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
        StatusLabel.TextColor3 = COLORS.TEXT
    end
end

local function updateTeleportToggle()
    if autoTeleport then
        TeleportToggle.BackgroundColor3 = COLORS.TOGGLE_ON
        TweenService:Create(
            TeleportToggleButton, 
            TweenInfo.new(0.2), 
            {Position = UDim2.new(1, -20, 0.5, -7.5)}
        ):Play()
    else
        TeleportToggle.BackgroundColor3 = COLORS.TOGGLE_OFF
        TweenService:Create(
            TeleportToggleButton, 
            TweenInfo.new(0.2), 
            {Position = UDim2.new(0, 5, 0.5, -7.5)}
        ):Play()
    end
end

TeleportToggle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        autoTeleport = not autoTeleport
        updateTeleportToggle()
    end
end)

-- Button animations
local function createButtonAnimation(button, originalColor)
    local hoverColor = Color3.new(
        math.min(originalColor.R * 1.2, 1),
        math.min(originalColor.G * 1.2, 1),
        math.min(originalColor.B * 1.2, 1)
    )
    local pressedColor = Color3.new(
        originalColor.R * 0.8,
        originalColor.G * 0.8,
        originalColor.B * 0.8
    )
    
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = originalColor}):Play()
    end)
    
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = pressedColor}):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = hoverColor}):Play()
    end)
end

createButtonAnimation(StartButton, COLORS.BUTTON_GREEN)
createButtonAnimation(StopButton, COLORS.BUTTON_RED)

-- Speed slider functionality
local speedSliderDragging = false

SpeedSliderButton.MouseButton1Down:Connect(function()
    speedSliderDragging = true
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        speedSliderDragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if speedSliderDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mousePos = UserInputService:GetMouseLocation().X
        local sliderPos = SpeedSlider.AbsolutePosition.X
        local sliderSize = SpeedSlider.AbsoluteSize.X
        local relativePos = math.clamp((mousePos - sliderPos) / sliderSize, 0, 1)
        
        teleportSpeed = 0.1 + (relativePos * 0.9) -- Range: 0.1 to 1.0
        SpeedSliderFill.Size = UDim2.new(relativePos, 0, 1, 0)
        SpeedSliderButton.Position = UDim2.new(relativePos, -7.5, 0.5, -7.5)
    end
end)

-- Farming Functions
local function findBasePart(model)
    for _, child in pairs(model:GetDescendants()) do
        if child:IsA("BasePart") and (
            child.Name:lower():find("root") or
            child.Name:lower():find("main") or
            child.Name:lower():find("center") or
            child.Name:lower():find("primary") or
            child.Name:lower():find("handle") or
            child.Name:lower():find("amber")
        ) then
            return child
        end
    end
    
    for _, child in pairs(model:GetDescendants()) do
        if child:IsA("BasePart") then
            return child
        end
    end
    
    return nil
end

local function getAvailableAmbers()
    local ambers = {}
    
    if workspace:FindFirstChild("ItemSpawn") and workspace.ItemSpawn:FindFirstChild("Amber") then
        for _, amberSpawn in pairs(workspace.ItemSpawn.Amber:GetChildren()) do
            if amberSpawn.Name == "AmberSpawn" and #amberSpawn:GetChildren() > 0 then
                local amber = amberSpawn:GetChildren()[1]
                local part = findBasePart(amber)
                if part then
                    table.insert(ambers, {
                        spawn = amberSpawn,
                        model = amber,
                        part = part
                    })
                end
            end
        end
    end
    
    return ambers
end

local function findProximityPrompt(object)
    for _, child in pairs(object:GetDescendants()) do
        if child:IsA("ProximityPrompt") then
            return child
        end
    end
    return nil
end

local function teleportTo(position)
    if not autoTeleport then return false end
    
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return false end
    
    local currentTime = tick()
    if currentTime - lastTeleport < teleportCooldown * (1.1 - teleportSpeed) then
        task.wait(teleportCooldown * (1.1 - teleportSpeed) - (currentTime - lastTeleport))
    end
    
    lastTeleport = tick()
    character.HumanoidRootPart.CFrame = CFrame.new(position + teleportOffset)
    task.wait(0.1)
    return true
end

local function triggerPrompt(prompt)
    if prompt then
        fireproximityprompt(prompt)
        return true
    end
    return false
end

local function isAmberCollected(amberData)
    if not amberData.spawn:IsDescendantOf(workspace) or #amberData.spawn:GetChildren() == 0 then
        return true
    end
    
    if not amberData.model:IsDescendantOf(workspace) then
        return true
    end
    
    return false
end

local function collectAmber(amberData)
    if not amberData or not running then return false end
    
    if not amberData.spawn:IsDescendantOf(workspace) or not amberData.model:IsDescendantOf(workspace) then
        return false
    end
    
    for attempt = 1, maxRetries do
        local teleportSuccess = teleportTo(amberData.part.Position)
        if not teleportSuccess then
            updateStatus("TELEPORT ERROR", true)
            task.wait(retryDelay)
            continue
        end
        
        local prompt = findProximityPrompt(amberData.model)
        if not prompt then
            updateStatus("NO PROMPT FOUND", true)
            return false
        end
        
        local triggerSuccess = triggerPrompt(prompt)
        if not triggerSuccess then
            updateStatus("PROMPT ERROR", true)
            task.wait(retryDelay)
            continue
        end
        
        task.wait(verificationDelay * (1.1 - teleportSpeed))
        if isAmberCollected(amberData) then
            amberCollected = amberCollected + 1
            updateCounter()
            return true
        end
        
        updateStatus("VERIFICATION FAILED", true)
        task.wait(retryDelay * (1.1 - teleportSpeed))
    end
    
    return false
end

local function farmLoop()
    while running do
        updateStatus("SEARCHING...", true)
        local ambers = getAvailableAmbers()
        
        if #ambers == 0 then
            updateStatus("NO AMBER FOUND", true)
            task.wait(1)
        else
            for _, amberData in pairs(ambers) do
                if not running then break end
                
                currentAmber = amberData
                updateStatus("COLLECTING...", true)
                
                local success = collectAmber(amberData)
                if success then
                    updateStatus("COLLECTED", true)
                else
                    updateStatus("FAILED", true)
                end
                
                task.wait(0.2 * (1.1 - teleportSpeed))
                currentAmber = nil
            end
        end
        
        task.wait(0.3 * (1.1 - teleportSpeed))
    end
    
    updateStatus("IDLE", false)
end

-- Button connections
StartButton.MouseButton1Click:Connect(function()
    if not running then
        running = true
        amberCollected = 0
        updateCounter()
        updateStatus("STARTING...", true)
        coroutine.wrap(farmLoop)()
    end
end)

StopButton.MouseButton1Click:Connect(function()
    if running then
        running = false
        currentAmber = nil
        updateStatus("STOPPING...", false)
    end
end)

-- Toggle GUI with RightControl
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.RightControl then
        guiVisible = not guiVisible
        MainFrame.Visible = guiVisible
    end
end)

-- Initial setup
updateTeleportToggle()
updateStatus("IDLE", false)

-- Animation on load
MainFrame.Position = UDim2.new(0.5, -175, 0, -400)
TweenService:Create(
    MainFrame, 
    TweenInfo.new(0.7, Enum.EasingStyle.Quint), 
    {Position = UDim2.new(0.5, -175, 0.5, -150)}
):Play()

print("Echelon Farm Pro loaded successfully")
